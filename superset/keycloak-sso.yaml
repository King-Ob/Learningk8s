apiVersion: v1
kind: Namespace
metadata:
  name: keycloak-sso

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-config
  namespace: keycloak-sso
data:
  superset_config.py: |
    from flask_appbuilder.security.manager import AUTH_OID, AUTH_REMOTE_USER, AUTH_DB, AUTH_LDAP, AUTH_OAUTH

    # The SQLAlchemy connection string.
    SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://superset:superset@postgresql:5432/superset'

    # Flask-WTF flag for CSRF
    WTF_CSRF_ENABLED = True

    # Add endpoints requiring authentication here, for example:
    # AUTH_ROLE_PUBLIC = 'Public'
    # AUTH_ROLE_AUTHENTICATED = 'Authenticated'
    # AUTH_ROLE_ADMIN = 'Admin'
    # AUTH_USER_REGISTRATION = True
    # AUTH_USER_REGISTRATION_ROLE = AUTH_ROLE_PUBLIC
    # AUTH_OID_PROVIDERS = [{'name':'my google account', 'url':'https://accounts.google.com', 'client_id': GOOGLE_CLIENT_ID, 'client_secret': GOOGLE_CLIENT_SECRET, 'whitelisted_domains': ['example.com'], 'icon': 'fa-google'}]
    # AUTH_REMOTE_USER_KEY = 'REMOTE_USER'
    # AUTH_REMOTE_USER_HEADER = 'HTTP_REMOTE_USER'
    # AUTH_DEFAULT_PROVIDERS = AUTH_DB
    # AUTH_USER_REGISTRATION_ROLE = AUTH_ROLE_PUBLIC

    # Configure SSO with Keycloak
    AUTH_TYPE = AUTH_OAUTH
    AUTH_OAUTH_PROVIDERS = [{
        'name': 'Keycloak',
        'icon': 'fa-key',
        'token_key': 'access_token',
        'remote_app': {
